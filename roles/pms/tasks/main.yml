---

- pip: name=ansible-lint
- pip: name=bashate
- pip: name=docker-compose
- pip: name=mycli # MySQL Client
- pip: name=vim-vint
- pip: name=websocket # For docker-compose

- npm: name=dockerfile_lint global=yes
- npm: name=dockerlint global=yes
- npm: name=eslint global=yes
- npm: name=eslint-config-airbnb global=yes
- npm: name=eslint-config-eslint global=yes
- npm: name=eslint-config-google global=yes
- npm: name=eslint-md global=yes
- npm: name=gitbook global=yes
- npm: name=gitbook-cli global=yes
- npm: name=js-yaml global=yes
- npm: name=json2yaml global=yes
- npm: name=jsonlint global=yes
- npm: name=textlint global=yes
- npm: name=textlint-plugin-jtf-style global=yes
- npm: name=textlint-rule-ja-yahoo-kousei global=yes
- npm: name=textlint-rule-max-appearence-count-of-words global=yes
- npm: name=textlint-rule-max-length-of-title global=yes
- npm: name=textlint-rule-max-number-of-lines global=yes
- npm: name=textlint-rule-max-ten global=yes
- npm: name=textlint-rule-no-double-negative-ja global=yes
- npm: name=textlint-rule-no-doubled-joshi global=yes
- npm: name=textlint-rule-no-dropping-the-ra global=yes
- npm: name=textlint-rule-no-mix-dearu-desumasu global=yes
- npm: name=textlint-rule-no-start-duplicated-conjunction global=yes
- npm: name=textlint-rule-no-todo global=yes
- npm: name=textlint-rule-prh global=yes
- npm: name=textlint-rule-sentence-length global=yes
- npm: name=textlint-rule-spellcheck-tech-word global=yes
- npm: name=textstat global=yes
- npm: name=textstat-plugin-ja global=yes
- npm: name=tldr global=yes
- npm: name=ttystudio global=yes
- npm: name=wunderline global=yes

- gem: name=mdl user_install=no
- gem: name=rhc user_install=no # OpenShift Client
- gem: name=rubygems-update user_install=no
- gem: name=sqlint user_install=no
- gem: name=travis user_install=no
- gem: name=travis-lint user_install=no
- gem: name=yaml-lint user_install=no

- command: which wine
  become: no
  register: has_wine
  ignore_errors: yes

- debug: msg="install kindle by wine"
- stat: path="~/.wine/drive_c/Program Files (x86)/Amazon/Kindle/Kindle.exe"
  become: no
  register: has_kindle
- get_url: url=http://www.amazon.co.jp/kindlepcdownload dest=/tmp timeout=300
  become: no
  when: has_wine.rc == 0 and has_kindle.stat.exists == False
  tags: slow

- shell: wine /tmp/$(ls /tmp | grep KindleForPC-installer)
  become: no
  when: has_wine.rc == 0 and has_kindle.stat.exists == False

- debug: msg="install licecap by wine"
- stat: path="~/.wine/drive_c/Program Files (x86)/LICEcap/licecap.exe"
  become: no
  register: has_licecap
- get_url: url=http://www.cockos.com/licecap/licecap125-install.exe dest=/tmp
  become: no
  when: has_wine.rc == 0 and has_licecap.stat.exists == False
- command: wine /tmp/licecap125-install.exe
  become: no
  when: has_wine.rc == 0 and has_licecap.stat.exists == False

- debug: msg="install gvm" # for gradle
- stat: path="~/.gvm/bin/gvm"
  become: no
  register: has_gvm
  ignore_errors: yes
- shell: curl -s -S -L https://raw.githubusercontent.com/moovweb/gvm/master/binscripts/gvm-installer | bash
  become: no
  when: has_gvm.stat.exists == False
  tags:
    - skip_ansible_lint

#    TODO bashrc
#    - debug: msg="install gradle"
#    - command: which gradle
#      register: has_gradle
#      ignore_errors: yes
#    - shell: gvm install gradle
#      when: has_gradle.rc != 0

